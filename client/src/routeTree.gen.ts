/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AiIndexRouteImport } from './routes/ai/index'
import { Route as AiReviewRouteImport } from './routes/ai/review'

const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AiIndexRoute = AiIndexRouteImport.update({
  id: '/ai/',
  path: '/ai/',
  getParentRoute: () => rootRouteImport,
} as any)
const AiReviewRoute = AiReviewRouteImport.update({
  id: '/ai/review',
  path: '/ai/review',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/ai/review': typeof AiReviewRoute
  '/ai': typeof AiIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/ai/review': typeof AiReviewRoute
  '/ai': typeof AiIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/ai/review': typeof AiReviewRoute
  '/ai/': typeof AiIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat' | '/ai/review' | '/ai'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat' | '/ai/review' | '/ai'
  id: '__root__' | '/' | '/chat' | '/ai/review' | '/ai/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRoute
  AiReviewRoute: typeof AiReviewRoute
  AiIndexRoute: typeof AiIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai/': {
      id: '/ai/'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof AiIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai/review': {
      id: '/ai/review'
      path: '/ai/review'
      fullPath: '/ai/review'
      preLoaderRoute: typeof AiReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRoute,
  AiReviewRoute: AiReviewRoute,
  AiIndexRoute: AiIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
